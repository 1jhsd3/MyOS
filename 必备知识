| 寄存器 | 高   | 低   | 作用  寄存器就是一位位比特位的组合，用于存放0和1表示数据                                                        
| :----- | ---- | ---- | ----------------------------------------------------------   
| ax     | ah   | al   | 累加器 ，用于存放算术和逻辑运算的结果                           
| bx     | bh   | bl   | 基址寄存器 ，可以用作指针或存放数据。                           
| cx     | ch   | cl   | 计数器 ，常用于循环计数器。                                   
| dx     | dh   | dl   | 数据寄存器 ，可用作输入输出端口的指针。                         
| sp     |      |      | 堆栈指针 ，指向堆栈区的栈顶。                                  
| bp     |      |      | 基址指针 ，通常用作堆栈帧指针，指向函数调用时的参数和局部变量。   
| si     |      |      | 源变址寄存器 ，用于字符串操作中的源地址。                       
| di     |      |      | 目的变址寄存器 ，用于字符串操作中的目的地址。                   
|        |      |      | 以上这些寄存器为16位，可分为高8位与低8位。                     
| cs     |      |      | 代码段寄存器：存放程序代码的段地址。                          
| ds     |      |      | 数据段寄存器：存放数据的段地址。                             
| es     |      |      | 堆栈段寄存器：存放堆栈的段地址。                             
| ss     |      |      | 附加段寄存器：进一步扩展数据存储能力时使用的段地址。           
|        |      |      |    
寻址方式介绍：
真实物理地址=段基址+偏移量
8086架构的CPU地址线有20根，但寄存器只有16位，理论上只能访问2^16个地址，就是64KB大小的内存空间。
但是，我们把取到的16位数放到20根地址线的前16位，这时就空下了后4位，然后我们在这基础上，再加一个数。这时，这20位地址线就可以全部使用上。
在最大时 1111 1111 1111 1111 0000 + 0000 0000 0000 1111 = 1111 1111 1111 1111 1111 从0~1111 1111 1111 1111 1111为2^20。
这样能够实际访问到的物理地址最大为 1111 1111 1111 1111 1111也就是1MB大小的内存空间。
上述过程中，第二次加的那个数便叫作偏移量。
可以理解为 最多 1111个人为一组，最多有1111 1111 1111 1111组，这样最多有1048576人。而1048576种状态用二进制位20位刚好可以表示。
实模式：
一台裸机，没有安装任何操作系统，我们可以编写汇编语言程序，写好汇编为二进制文件，直接交给cpu执行。这种模式下可以访问的内存为1MB。
我们是用汇编语言直接控制的cpu的寄存器。这种情况就叫实模式，程序员手动管理cpu。
关于1MB的内存空间
实模式下cpu能直接访问的这1MB空间是个比较特殊的空间。

